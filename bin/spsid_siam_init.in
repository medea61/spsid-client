#!@PERL@

use strict;
use warnings;

use Getopt::Long;
use Try::Tiny;
    
BEGIN {
    if( defined($ENV{'SPSID_PERLLIBDIRS'}) ) {
        unshift(@INC, split(/,/, $ENV{'SPSID_PERLLIBDIRS'}));
    }
    else {
        unshift(@INC, split(/,/, @perllibdirs@));
    }
}

use SPSID::Client;


sub print_usage {
    print STDERR ('Usage: ' . $0 . ' --url=URL [options...]' . "\n",
                  SPSID::Client->getopt_help_string(),
                  "\n");
    print STDERR ("This program initializes the SIAM root\n" .
                  "object in SPSID database.\n");
}


my $client;

try {
    $client = SPSID::Client->new_from_getopt();
}
    catch {
        print STDERR "Error: " . $_ . "\n";
        print_usage();
        exit(1);
    };


my $ok =  GetOptions();

if( not $ok or scalar(@ARGV) > 0 ) {
    print_usage();
    exit(1);
};


my $attr = {
            'spsid.object.container' => 'NIL',
            'spsid.siam.root' => 1,
            'siam.object.complete' => 1,
           };


my $root = $client->get_siam_root();

if( defined($root) ) {
    print STDERR "The SIAM root object already exists\n";
    exit(1);
}


try {
    $client->create_object('SIAM',
                           {
                            'spsid.object.container' => 'NIL',
                            'siam.object.complete' => 1,
                           });
}
    catch {
        print STDERR "Error: " . $_ . "\n";
        exit(1);
    };



print STDERR "Created SIAM root object\n";
exit(0);


    



    


# Local Variables:
# mode: cperl
# indent-tabs-mode: nil
# cperl-indent-level: 4
# cperl-continued-statement-offset: 4
# cperl-continued-brace-offset: -4
# cperl-brace-offset: 0
# cperl-label-offset: -2
# End:
