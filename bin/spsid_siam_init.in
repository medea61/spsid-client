#!@PERL@

use strict;
use warnings;

use Getopt::Long;
use Try::Tiny;
    
BEGIN {
    if(defined($ENV{'SPSID_CONFIG'})) {
        require $ENV{'SPSID_CONFIG'};
    } else { require '@spsid_config_pl@'; }
}

use SPSID::Client;


my $client;

try {
    $client = SPSID::Client->new_from_getopt();
}
    catch {
        print STDERR "Error: " . $_ . "\n";
        print STDERR 'Usage: ' . $0 . ' --url [options...]' . "\n",
            SPSID::Client->getopt_help_string(), "\n\n";
        print STDERR "This program initializes the SIAM root " .
            "object in SPSID database.\n";
        exit(1);
    };



my $attr = {
            'spsid.object.class' => 'SIAM',
            'spsid.object.container' => 'NIL',
            'spsid.siam.root' => 1,
           };


my $r = $client->search_objects('NIL', 'SIAM');

if( scalar(@{$r}) > 0 ) {
    print STDERR "The SIAM root object already exists\n";
    exit(1);
}


try {
    $client->create_object('SIAM', $attr);
}
    catch {
        print STDERR "Error: " . $_ . "\n";
        exit(1);
    };



print STDERR "Created SIAM root object\n";
exit(0);


    



    


# Local Variables:
# mode: cperl
# indent-tabs-mode: nil
# cperl-indent-level: 4
# cperl-continued-statement-offset: 4
# cperl-continued-brace-offset: -4
# cperl-brace-offset: 0
# cperl-label-offset: -2
# End:
